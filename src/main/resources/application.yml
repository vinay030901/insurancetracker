spring:
  main:
    banner-mode: console
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/tracker}
    username: ${SPRING_DATASOURCE_USERNAME:tracker}
    password: ${SPRING_DATASOURCE_PASSWORD:trackerpass}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-init-sql: "SET TIME ZONE 'UTC'"
  jpa:
    hibernate:
      ddl-auto: update   # Dev only. Use Flyway/Liquibase in production.
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          time_zone: UTC  # Use UTC to avoid driver/server timezone mapping issues
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: tracker-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.sundefined.insurancetracker.model.PolicyEvent
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    timeout: 60000

app:
  topics:
    policy-events: policy.events.v1
  cache:
    ttl-hours: 24

webhook:
  secret: ${WEBHOOK_SECRET:supersecret123}

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([%t]){cyan} %clr(%c{1.}){magenta} - %m%n"
